{"ast":null,"code":"var _jsxFileName = \"/Users/daniel/Documents/ReactStore/reactstore/src/Context.js\";\nimport React, { Component } from 'react';\nimport { storeProducts, detailProduct } from './data';\nconst ProductContext = React.createContext();\n\nclass ProductProvider extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleDetail = id => {\n      console.log('hello from detail');\n      const product = this.getItem(id);\n      this.setState(() => {\n        return {\n          detailProduct: product\n        };\n      });\n    };\n\n    this.addToCart = id => {\n      let tempProducts = [...this.state.products];\n      const index = tempProducts.indexOf(this.getItem(id));\n      const product = tempProducts[index];\n      product.inCart = true;\n      product.count = 1;\n      const price = product.price;\n      product.total = price;\n      this.setState(() => {\n        return {\n          products: tempProducts,\n          cart: [...this.state.products, product]\n        };\n      }, () => {\n        this.addTotals();\n      });\n    };\n\n    this.getItem = id => {\n      const product = this.state.products.find(item => item.id === id);\n      return product;\n    };\n\n    this.setProducts = () => {\n      let tempProducts = [];\n      storeProducts.forEach(item => {\n        const singleItem = { ...item\n        };\n        tempProducts = [...tempProducts, singleItem];\n      });\n      this.setState(() => {\n        return {\n          products: temp\n        };\n      });\n    };\n\n    this.closeModal = () => {\n      this.setState(() => {\n        return {\n          modalOpen: false\n        };\n      });\n    };\n\n    this.openModal = id => {\n      const product = this.getItem(id);\n      this.setState(() => {\n        return {\n          modalProduct: product,\n          modalOpen: true\n        };\n      });\n    };\n\n    this.increment = id => {\n      let tempCart = [...this.state.cart];\n      console.log(id + 'this id');\n      let selectProduct = tempCart.find(x => x.id === id); // console.log(selectProduct+\"this index\")\n\n      const index = tempCart.indexOf(selectProduct);\n      const product = tempCart[index];\n      product.count += 1;\n      product.total = product.count * product.price;\n      this.setState(() => {\n        return {\n          cart: [...tempCart]\n        };\n      }, () => this.addTotals());\n    };\n\n    this.decrement = id => {\n      let tempCart = [...this.state.cart];\n      let selectProduct = tempCart.find(x => x.id === id);\n      const index = tempCart.indexOf(selectProduct);\n      const product = tempCart[index];\n      product.count -= 1;\n      if (product.count <= 0) this.removeItem(id);else {\n        product.total = product.count * product.price;\n      }\n      this.setState(() => {\n        return {\n          cart: [...tempCart]\n        };\n      }, () => this.addTotals());\n    };\n\n    this.removeItem = id => {\n      let tempProducts = [...this.state.products];\n      let tempCart = [...this.state.cart];\n      tempCart = tempCart.filter(x => {\n        return x.id !== id;\n      });\n      const index = tempProducts.indexOf(this.getItem(id));\n      let removedProduct = tempProducts[index];\n      removedProduct.inCart = false;\n      removedProduct.count = 0;\n      removedProduct.total = 0;\n      this.setState(() => {\n        return {\n          products: [...tempProducts],\n          cart: [...tempCart]\n        };\n      }, () => this.addTotals());\n    };\n\n    this.clearCart = () => {\n      this.setState(() => {\n        return {\n          cart: []\n        };\n      }, () => {\n        this.setProducts();\n        this.addTotals();\n      });\n    };\n\n    this.addTotals = () => {\n      let subTotal = 0;\n      this.state.cart.map(x => {\n        return subTotal += x.total;\n      });\n      const tempTax = subTotal * 0.1;\n      const tax = parseFloat(tempTax.toFixed(2));\n      const total = subTotal + tax;\n      this.setState(() => {\n        return {\n          cartSubTotal: subTotal,\n          cartTax: tax,\n          cartTotal: total\n        };\n      }); //setProd({ ...prod, cartSubTotal: subTotal, cartTax: tax, cartTotal: total })\n    };\n\n    this.state = {\n      products: storeProducts,\n      detailProduct: detailProduct,\n      cart: [],\n      modalOpen: false,\n      modalProduct: detailProduct,\n      cartSubTotal: 0,\n      cartTax: 0,\n      cartTotal: 0\n    };\n  }\n\n  render() {\n    console.log(this.state);\n    return /*#__PURE__*/React.createElement(ProductContext.Provider, {\n      value: { ...this.state,\n        handleDetail: this.handleDetail,\n        addToCart: this.addToCart,\n        openModal: this.openModal,\n        closeModal: this.closeModal,\n        increment: this.increment,\n        decrement: this.decrement,\n        removeItem: this.removeItem\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 7\n      }\n    }, this.props.children);\n  }\n\n}\n\nconst ProductConsumer = ProductContext.Consumer;\nexport { ProductProvider, ProductConsumer };","map":{"version":3,"sources":["/Users/daniel/Documents/ReactStore/reactstore/src/Context.js"],"names":["React","Component","storeProducts","detailProduct","ProductContext","createContext","ProductProvider","constructor","props","handleDetail","id","console","log","product","getItem","setState","addToCart","tempProducts","state","products","index","indexOf","inCart","count","price","total","cart","addTotals","find","item","setProducts","forEach","singleItem","temp","closeModal","modalOpen","openModal","modalProduct","increment","tempCart","selectProduct","x","decrement","removeItem","filter","removedProduct","clearCart","subTotal","map","tempTax","tax","parseFloat","toFixed","cartSubTotal","cartTax","cartTotal","render","children","ProductConsumer","Consumer"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport { storeProducts, detailProduct } from './data'\nconst ProductContext = React.createContext()\n\nclass ProductProvider extends Component {\n  constructor (props) {\n    super(props);\n    this.state = {\n      products: storeProducts,\n      detailProduct: detailProduct,\n      cart: [],\n      modalOpen: false,\n      modalProduct: detailProduct,\n      cartSubTotal: 0,\n      cartTax: 0,\n      cartTotal: 0\n    }\n  }\n\n  handleDetail = (id) => {\n    console.log('hello from detail')\n    const product = this.getItem(id)\n    this.setState(() => {\n      return { detailProduct: product }\n    })\n  }\n\n  addToCart = id => {\n    let tempProducts = [...this.state.products]\n    const index = tempProducts.indexOf(this.getItem(id))\n    const product = tempProducts[index]\n    product.inCart = true\n    product.count = 1\n    const price = product.price\n    product.total = price\n\n    this.setState(\n      () => {\n        return {\n          products: tempProducts,\n          cart: [...this.state.products, product]\n        }\n      },\n      () => {\n        this.addTotals()\n      }\n    )\n  }\n\n  getItem = id => {\n    const product = this.state.products.find(item => item.id === id)\n    return product\n  }\n  setProducts = () => {\n    let tempProducts = []\n    storeProducts.forEach(item => {\n      const singleItem = { ...item }\n      tempProducts = [...tempProducts, singleItem]\n\n    })\n    this.setState(() => {\n      return { products: temp }\n    })\n  }\n  closeModal = () => {\n    this.setState(() => {\n      return { modalOpen: false }\n    })\n  }\n  openModal = id => {\n    const product = this.getItem(id)\n    this.setState(() => {\n      return { modalProduct: product, modalOpen: true }\n    })\n  }\n  increment = id => {\n    let tempCart = [...this.state.cart]\n    console.log(id+'this id')\n    let selectProduct = tempCart.find(x => x.id === id)\n   // console.log(selectProduct+\"this index\")\n    const index = tempCart.indexOf(selectProduct)\n    const product = tempCart[index]\n    product.count += 1\n    product.total = product.count * product.price\n    this.setState(\n      () => {\n        return { cart: [...tempCart] }\n      },\n      () => this.addTotals()\n    )\n  }\n\n  decrement = id => {\n    let tempCart = [...this.state.cart]\n    let selectProduct = tempCart.find(x => x.id === id)\n    const index = tempCart.indexOf(selectProduct)\n    const product = tempCart[index]\n    product.count -= 1\n    if (product.count <= 0) this.removeItem(id)\n    else {\n      product.total = product.count * product.price\n    }\n    this.setState(\n      () => {\n        return { cart: [...tempCart] }\n      },\n      () => this.addTotals()\n    )\n  }\n\n  removeItem = id => {\n    let tempProducts = [...this.state.products]\n    let tempCart = [...this.state.cart]\n    tempCart = tempCart.filter(x => {\n      return x.id !== id\n    })\n    const index = tempProducts.indexOf(this.getItem(id))\n    let removedProduct = tempProducts[index]\n    removedProduct.inCart = false\n    removedProduct.count = 0\n    removedProduct.total = 0\n    this.setState(\n      () => {\n        return { products: [...tempProducts], cart: [...tempCart] }\n      },\n      () => this.addTotals()\n    )\n  }\n  clearCart = () => {\n    this.setState(\n      () => {\n        return { cart: [] }\n      },\n      () => {\n        this.setProducts()\n        this.addTotals()\n      }\n    )\n  }\n  addTotals = () => {\n    let subTotal = 0\n    this.state.cart.map(x => {\n      return (subTotal += x.total)\n    })\n    const tempTax = subTotal * 0.1\n    const tax = parseFloat(tempTax.toFixed(2))\n    const total = subTotal + tax\n    this.setState(() => {\n      return { cartSubTotal: subTotal, cartTax: tax, cartTotal: total }\n    })\n    //setProd({ ...prod, cartSubTotal: subTotal, cartTax: tax, cartTotal: total })\n  }\n  render () {\n    console.log(this.state)\n    return (\n      <ProductContext.Provider\n        value={{\n          ...this.state,\n          handleDetail: this.handleDetail,\n          addToCart: this.addToCart,\n          openModal: this.openModal,\n          closeModal: this.closeModal,\n          increment: this.increment,\n          decrement: this.decrement,\n          removeItem: this.removeItem\n        }}\n      >\n        {this.props.children}\n      </ProductContext.Provider>\n    )\n  }\n}\nconst ProductConsumer = ProductContext.Consumer\nexport { ProductProvider, ProductConsumer }\n"]},"metadata":{},"sourceType":"module"}