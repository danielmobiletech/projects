{"ast":null,"code":"var _jsxFileName = \"/Users/daniel/donor-app/src/components/DCandidateForm.js\";\nimport React, { useState, useEffect } from \"react\";\nimport { Grid, TextField, withStyles, FormControl, InputLabel, Select, MenuItem, Button, FormHelperText } from \"@material-ui/core\";\nimport useForm from \"./useForm\";\nimport { connect } from \"react-redux\";\nimport * as actions from \"../actions/dCandidate\";\nimport { useToasts } from \"react-toast-notifications\";\n\nconst styles = theme => ({\n  root: {\n    '& .MuiTextField-root': {\n      margin: theme.spacing(1),\n      minWidth: 230\n    }\n  },\n  formControl: {\n    margin: theme.spacing(1),\n    minWidth: 230\n  },\n  smMargin: {\n    margin: theme.spacing(1)\n  }\n});\n\nconst initialFieldValues = {\n  fullName: '',\n  mobile: '',\n  email: '',\n  age: '',\n  bloodGroup: '',\n  address: ''\n};\n\nconst DCandidateForm = ({\n  classes,\n  ...props\n}) => {\n  //toast msg.\n  const {\n    addToast\n  } = useToasts(); //validate()\n  //validate({fullName:'jenny'})\n\n  const validate = (fieldValues = values) => {\n    let temp = { ...errors\n    };\n    if ('fullName' in fieldValues) temp.fullName = fieldValues.fullName ? \"\" : \"This field is required.\";\n    if ('mobile' in fieldValues) temp.mobile = fieldValues.mobile ? \"\" : \"This field is required.\";\n    if ('bloodGroup' in fieldValues) temp.bloodGroup = fieldValues.bloodGroup ? \"\" : \"This field is required.\";\n    if ('email' in fieldValues) temp.email = /^$|.+@.+..+/.test(fieldValues.email) ? \"\" : \"Email is not valid.\";\n    setErrors({ ...temp\n    });\n    if (fieldValues == values) return Object.values(temp).every(x => x == \"\");\n  };\n\n  const {\n    values,\n    setValues,\n    errors,\n    setErrors,\n    handleInputChange,\n    resetForm\n  } = useForm(initialFieldValues, validate, props.setCurrentId); //material-ui select\n\n  const inputLabel = React.useRef(null);\n  const [labelWidth, setLabelWidth] = React.useState(0);\n  React.useEffect(() => {\n    setLabelWidth(inputLabel.current.offsetWidth);\n  }, []);\n\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    if (validate()) {\n      const onSuccess = () => {\n        resetForm();\n        addToast(\"Submitted successfully\", {\n          appearance: 'success'\n        });\n      };\n\n      if (props.currentId == 0) props.createDCandidate(values, onSuccess);else props.updateDCandidate(props.currentId, values, onSuccess);\n    }\n  };\n\n  useEffect(() => {\n    if (props.currentId != 0) {\n      setValues({ ...props.dCandidateList.find(x => x.id == props.currentId)\n      });\n      setErrors({});\n    }\n  }, [props.currentId]);\n  return /*#__PURE__*/React.createElement(\"form\", {\n    autoComplete: \"off\",\n    noValidate: true,\n    className: classes.root,\n    onSubmit: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(TextField, Object.assign({\n    name: \"fullName\",\n    variant: \"outlined\",\n    label: \"Full Name\",\n    value: values.fullName,\n    onChange: handleInputChange\n  }, errors.fullName && {\n    error: true,\n    helperText: errors.fullName\n  }, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(TextField, Object.assign({\n    name: \"email\",\n    variant: \"outlined\",\n    label: \"Email\",\n    value: values.email,\n    onChange: handleInputChange\n  }, errors.email && {\n    error: true,\n    helperText: errors.email\n  }, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(FormControl, Object.assign({\n    variant: \"outlined\",\n    className: classes.formControl\n  }, errors.bloodGroup && {\n    error: true\n  }, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(InputLabel, {\n    ref: inputLabel,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 25\n    }\n  }, \"Blood Group\"), /*#__PURE__*/React.createElement(Select, {\n    name: \"bloodGroup\",\n    value: values.bloodGroup,\n    onChange: handleInputChange,\n    labelWidth: labelWidth,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(MenuItem, {\n    value: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 29\n    }\n  }, \"Select Blood Group\"), /*#__PURE__*/React.createElement(MenuItem, {\n    value: \"A+\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 29\n    }\n  }, \"A +ve\"), /*#__PURE__*/React.createElement(MenuItem, {\n    value: \"A-\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 29\n    }\n  }, \"A -ve\"), /*#__PURE__*/React.createElement(MenuItem, {\n    value: \"B+\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 29\n    }\n  }, \"B +ve\"), /*#__PURE__*/React.createElement(MenuItem, {\n    value: \"B-\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 29\n    }\n  }, \"B -ve\"), /*#__PURE__*/React.createElement(MenuItem, {\n    value: \"AB+\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 29\n    }\n  }, \"AB +ve\"), /*#__PURE__*/React.createElement(MenuItem, {\n    value: \"AB-\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 29\n    }\n  }, \"AB -ve\"), /*#__PURE__*/React.createElement(MenuItem, {\n    value: \"O+\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 29\n    }\n  }, \"O +ve\"), /*#__PURE__*/React.createElement(MenuItem, {\n    value: \"O-\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 29\n    }\n  }, \"O -ve\")), errors.bloodGroup && /*#__PURE__*/React.createElement(FormHelperText, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 47\n    }\n  }, errors.bloodGroup))), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(TextField, Object.assign({\n    name: \"mobile\",\n    variant: \"outlined\",\n    label: \"Mobile\",\n    value: values.mobile,\n    onChange: handleInputChange\n  }, errors.mobile && {\n    error: true,\n    helperText: errors.mobile\n  }, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(TextField, {\n    name: \"age\",\n    variant: \"outlined\",\n    label: \"Age\",\n    value: values.age,\n    onChange: handleInputChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(TextField, {\n    name: \"address\",\n    variant: \"outlined\",\n    label: \"Address\",\n    value: values.address,\n    onChange: handleInputChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    variant: \"contained\",\n    color: \"primary\",\n    type: \"submit\",\n    className: classes.smMargin,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 166,\n      columnNumber: 25\n    }\n  }, \"Submit\"), /*#__PURE__*/React.createElement(Button, {\n    variant: \"contained\",\n    className: classes.smMargin,\n    onClick: resetForm,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 174,\n      columnNumber: 25\n    }\n  }, \"Reset\")))));\n};\n\nconst mapStateToProps = state => ({\n  dCandidateList: state.dCandidate.list\n});\n\nconst mapActionToProps = {\n  createDCandidate: actions.create,\n  updateDCandidate: actions.update\n};\nexport default connect(mapStateToProps, mapActionToProps)(withStyles(styles)(DCandidateForm));","map":{"version":3,"sources":["/Users/daniel/donor-app/src/components/DCandidateForm.js"],"names":["React","useState","useEffect","Grid","TextField","withStyles","FormControl","InputLabel","Select","MenuItem","Button","FormHelperText","useForm","connect","actions","useToasts","styles","theme","root","margin","spacing","minWidth","formControl","smMargin","initialFieldValues","fullName","mobile","email","age","bloodGroup","address","DCandidateForm","classes","props","addToast","validate","fieldValues","values","temp","errors","test","setErrors","Object","every","x","setValues","handleInputChange","resetForm","setCurrentId","inputLabel","useRef","labelWidth","setLabelWidth","current","offsetWidth","handleSubmit","e","preventDefault","onSuccess","appearance","currentId","createDCandidate","updateDCandidate","dCandidateList","find","id","error","helperText","mapStateToProps","state","dCandidate","list","mapActionToProps","create","update"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,IAAT,EAAeC,SAAf,EAA0BC,UAA1B,EAAsCC,WAAtC,EAAmDC,UAAnD,EAA+DC,MAA/D,EAAuEC,QAAvE,EAAiFC,MAAjF,EAAyFC,cAAzF,QAA+G,mBAA/G;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAO,KAAKC,OAAZ,MAAyB,uBAAzB;AACA,SAASC,SAAT,QAA0B,2BAA1B;;AAEA,MAAMC,MAAM,GAAGC,KAAK,KAAK;AACrBC,EAAAA,IAAI,EAAE;AACF,4BAAwB;AACpBC,MAAAA,MAAM,EAAEF,KAAK,CAACG,OAAN,CAAc,CAAd,CADY;AAEpBC,MAAAA,QAAQ,EAAE;AAFU;AADtB,GADe;AAOrBC,EAAAA,WAAW,EAAE;AACTH,IAAAA,MAAM,EAAEF,KAAK,CAACG,OAAN,CAAc,CAAd,CADC;AAETC,IAAAA,QAAQ,EAAE;AAFD,GAPQ;AAWrBE,EAAAA,QAAQ,EAAE;AACNJ,IAAAA,MAAM,EAAEF,KAAK,CAACG,OAAN,CAAc,CAAd;AADF;AAXW,CAAL,CAApB;;AAgBA,MAAMI,kBAAkB,GAAG;AACvBC,EAAAA,QAAQ,EAAE,EADa;AAEvBC,EAAAA,MAAM,EAAE,EAFe;AAGvBC,EAAAA,KAAK,EAAE,EAHgB;AAIvBC,EAAAA,GAAG,EAAE,EAJkB;AAKvBC,EAAAA,UAAU,EAAE,EALW;AAMvBC,EAAAA,OAAO,EAAE;AANc,CAA3B;;AASA,MAAMC,cAAc,GAAG,CAAC;AAAEC,EAAAA,OAAF;AAAW,KAAGC;AAAd,CAAD,KAA2B;AAE9C;AACA,QAAM;AAAEC,IAAAA;AAAF,MAAenB,SAAS,EAA9B,CAH8C,CAK9C;AACA;;AACA,QAAMoB,QAAQ,GAAG,CAACC,WAAW,GAAGC,MAAf,KAA0B;AACvC,QAAIC,IAAI,GAAG,EAAE,GAAGC;AAAL,KAAX;AACA,QAAI,cAAcH,WAAlB,EACIE,IAAI,CAACb,QAAL,GAAgBW,WAAW,CAACX,QAAZ,GAAuB,EAAvB,GAA4B,yBAA5C;AACJ,QAAI,YAAYW,WAAhB,EACIE,IAAI,CAACZ,MAAL,GAAcU,WAAW,CAACV,MAAZ,GAAqB,EAArB,GAA0B,yBAAxC;AACJ,QAAI,gBAAgBU,WAApB,EACIE,IAAI,CAACT,UAAL,GAAkBO,WAAW,CAACP,UAAZ,GAAyB,EAAzB,GAA8B,yBAAhD;AACJ,QAAI,WAAWO,WAAf,EACIE,IAAI,CAACX,KAAL,GAAc,aAAD,CAAgBa,IAAhB,CAAqBJ,WAAW,CAACT,KAAjC,IAA0C,EAA1C,GAA+C,qBAA5D;AACJc,IAAAA,SAAS,CAAC,EACN,GAAGH;AADG,KAAD,CAAT;AAIA,QAAIF,WAAW,IAAIC,MAAnB,EACI,OAAOK,MAAM,CAACL,MAAP,CAAcC,IAAd,EAAoBK,KAApB,CAA0BC,CAAC,IAAIA,CAAC,IAAI,EAApC,CAAP;AACP,GAhBD;;AAkBA,QAAM;AACFP,IAAAA,MADE;AAEFQ,IAAAA,SAFE;AAGFN,IAAAA,MAHE;AAIFE,IAAAA,SAJE;AAKFK,IAAAA,iBALE;AAMFC,IAAAA;AANE,MAOFnC,OAAO,CAACY,kBAAD,EAAqBW,QAArB,EAA+BF,KAAK,CAACe,YAArC,CAPX,CAzB8C,CAkC9C;;AACA,QAAMC,UAAU,GAAGjD,KAAK,CAACkD,MAAN,CAAa,IAAb,CAAnB;AACA,QAAM,CAACC,UAAD,EAAaC,aAAb,IAA8BpD,KAAK,CAACC,QAAN,CAAe,CAAf,CAApC;AACAD,EAAAA,KAAK,CAACE,SAAN,CAAgB,MAAM;AAClBkD,IAAAA,aAAa,CAACH,UAAU,CAACI,OAAX,CAAmBC,WAApB,CAAb;AACH,GAFD,EAEG,EAFH;;AAIA,QAAMC,YAAY,GAAGC,CAAC,IAAI;AACtBA,IAAAA,CAAC,CAACC,cAAF;;AACA,QAAItB,QAAQ,EAAZ,EAAgB;AACZ,YAAMuB,SAAS,GAAG,MAAM;AACpBX,QAAAA,SAAS;AACTb,QAAAA,QAAQ,CAAC,wBAAD,EAA2B;AAAEyB,UAAAA,UAAU,EAAE;AAAd,SAA3B,CAAR;AACH,OAHD;;AAIA,UAAI1B,KAAK,CAAC2B,SAAN,IAAmB,CAAvB,EACI3B,KAAK,CAAC4B,gBAAN,CAAuBxB,MAAvB,EAA+BqB,SAA/B,EADJ,KAGIzB,KAAK,CAAC6B,gBAAN,CAAuB7B,KAAK,CAAC2B,SAA7B,EAAwCvB,MAAxC,EAAgDqB,SAAhD;AACP;AACJ,GAZD;;AAcAxD,EAAAA,SAAS,CAAC,MAAM;AACZ,QAAI+B,KAAK,CAAC2B,SAAN,IAAmB,CAAvB,EAA0B;AACtBf,MAAAA,SAAS,CAAC,EACN,GAAGZ,KAAK,CAAC8B,cAAN,CAAqBC,IAArB,CAA0BpB,CAAC,IAAIA,CAAC,CAACqB,EAAF,IAAQhC,KAAK,CAAC2B,SAA7C;AADG,OAAD,CAAT;AAGAnB,MAAAA,SAAS,CAAC,EAAD,CAAT;AACH;AACJ,GAPQ,EAON,CAACR,KAAK,CAAC2B,SAAP,CAPM,CAAT;AASA,sBACI;AAAM,IAAA,YAAY,EAAC,KAAnB;AAAyB,IAAA,UAAU,MAAnC;AAAoC,IAAA,SAAS,EAAE5B,OAAO,CAACd,IAAvD;AAA6D,IAAA,QAAQ,EAAEqC,YAAvE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,IAAD;AAAM,IAAA,SAAS,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,IAAD;AAAM,IAAA,IAAI,MAAV;AAAW,IAAA,EAAE,EAAE,CAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,SAAD;AACI,IAAA,IAAI,EAAC,UADT;AAEI,IAAA,OAAO,EAAC,UAFZ;AAGI,IAAA,KAAK,EAAC,WAHV;AAII,IAAA,KAAK,EAAElB,MAAM,CAACZ,QAJlB;AAKI,IAAA,QAAQ,EAAEqB;AALd,KAMSP,MAAM,CAACd,QAAP,IAAmB;AAAEyC,IAAAA,KAAK,EAAE,IAAT;AAAeC,IAAAA,UAAU,EAAE5B,MAAM,CAACd;AAAlC,GAN5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KADJ,eASI,oBAAC,SAAD;AACI,IAAA,IAAI,EAAC,OADT;AAEI,IAAA,OAAO,EAAC,UAFZ;AAGI,IAAA,KAAK,EAAC,OAHV;AAII,IAAA,KAAK,EAAEY,MAAM,CAACV,KAJlB;AAKI,IAAA,QAAQ,EAAEmB;AALd,KAMSP,MAAM,CAACZ,KAAP,IAAgB;AAAEuC,IAAAA,KAAK,EAAE,IAAT;AAAeC,IAAAA,UAAU,EAAE5B,MAAM,CAACZ;AAAlC,GANzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KATJ,eAiBI,oBAAC,WAAD;AAAa,IAAA,OAAO,EAAC,UAArB;AACI,IAAA,SAAS,EAAEK,OAAO,CAACV;AADvB,KAESiB,MAAM,CAACV,UAAP,IAAqB;AAAEqC,IAAAA,KAAK,EAAE;AAAT,GAF9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAII,oBAAC,UAAD;AAAY,IAAA,GAAG,EAAEjB,UAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAJJ,eAKI,oBAAC,MAAD;AACI,IAAA,IAAI,EAAC,YADT;AAEI,IAAA,KAAK,EAAEZ,MAAM,CAACR,UAFlB;AAGI,IAAA,QAAQ,EAAEiB,iBAHd;AAII,IAAA,UAAU,EAAEK,UAJhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAMI,oBAAC,QAAD;AAAU,IAAA,KAAK,EAAC,EAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BANJ,eAOI,oBAAC,QAAD;AAAU,IAAA,KAAK,EAAC,IAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAPJ,eAQI,oBAAC,QAAD;AAAU,IAAA,KAAK,EAAC,IAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aARJ,eASI,oBAAC,QAAD;AAAU,IAAA,KAAK,EAAC,IAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aATJ,eAUI,oBAAC,QAAD;AAAU,IAAA,KAAK,EAAC,IAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAVJ,eAWI,oBAAC,QAAD;AAAU,IAAA,KAAK,EAAC,KAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAXJ,eAYI,oBAAC,QAAD;AAAU,IAAA,KAAK,EAAC,KAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAZJ,eAaI,oBAAC,QAAD;AAAU,IAAA,KAAK,EAAC,IAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAbJ,eAcI,oBAAC,QAAD;AAAU,IAAA,KAAK,EAAC,IAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAdJ,CALJ,EAqBKZ,MAAM,CAACV,UAAP,iBAAqB,oBAAC,cAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAiBU,MAAM,CAACV,UAAxB,CArB1B,CAjBJ,CADJ,eA0CI,oBAAC,IAAD;AAAM,IAAA,IAAI,MAAV;AAAW,IAAA,EAAE,EAAE,CAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAEI,oBAAC,SAAD;AACI,IAAA,IAAI,EAAC,QADT;AAEI,IAAA,OAAO,EAAC,UAFZ;AAGI,IAAA,KAAK,EAAC,QAHV;AAII,IAAA,KAAK,EAAEQ,MAAM,CAACX,MAJlB;AAKI,IAAA,QAAQ,EAAEoB;AALd,KAMSP,MAAM,CAACb,MAAP,IAAiB;AAAEwC,IAAAA,KAAK,EAAE,IAAT;AAAeC,IAAAA,UAAU,EAAE5B,MAAM,CAACb;AAAlC,GAN1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAFJ,eAUI,oBAAC,SAAD;AACI,IAAA,IAAI,EAAC,KADT;AAEI,IAAA,OAAO,EAAC,UAFZ;AAGI,IAAA,KAAK,EAAC,KAHV;AAII,IAAA,KAAK,EAAEW,MAAM,CAACT,GAJlB;AAKI,IAAA,QAAQ,EAAEkB,iBALd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAVJ,eAiBI,oBAAC,SAAD;AACI,IAAA,IAAI,EAAC,SADT;AAEI,IAAA,OAAO,EAAC,UAFZ;AAGI,IAAA,KAAK,EAAC,SAHV;AAII,IAAA,KAAK,EAAET,MAAM,CAACP,OAJlB;AAKI,IAAA,QAAQ,EAAEgB,iBALd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAjBJ,eAwBI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,MAAD;AACI,IAAA,OAAO,EAAC,WADZ;AAEI,IAAA,KAAK,EAAC,SAFV;AAGI,IAAA,IAAI,EAAC,QAHT;AAII,IAAA,SAAS,EAAEd,OAAO,CAACT,QAJvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eASI,oBAAC,MAAD;AACI,IAAA,OAAO,EAAC,WADZ;AAEI,IAAA,SAAS,EAAES,OAAO,CAACT,QAFvB;AAGI,IAAA,OAAO,EAAEwB,SAHb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aATJ,CAxBJ,CA1CJ,CADJ,CADJ;AAyFH,CAzJD;;AA4JA,MAAMqB,eAAe,GAAGC,KAAK,KAAK;AAC9BN,EAAAA,cAAc,EAAEM,KAAK,CAACC,UAAN,CAAiBC;AADH,CAAL,CAA7B;;AAIA,MAAMC,gBAAgB,GAAG;AACrBX,EAAAA,gBAAgB,EAAE/C,OAAO,CAAC2D,MADL;AAErBX,EAAAA,gBAAgB,EAAEhD,OAAO,CAAC4D;AAFL,CAAzB;AAKA,eAAe7D,OAAO,CAACuD,eAAD,EAAkBI,gBAAlB,CAAP,CAA2CnE,UAAU,CAACW,MAAD,CAAV,CAAmBe,cAAnB,CAA3C,CAAf","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { Grid, TextField, withStyles, FormControl, InputLabel, Select, MenuItem, Button, FormHelperText } from \"@material-ui/core\";\nimport useForm from \"./useForm\";\nimport { connect } from \"react-redux\";\nimport * as actions from \"../actions/dCandidate\";\nimport { useToasts } from \"react-toast-notifications\";\n\nconst styles = theme => ({\n    root: {\n        '& .MuiTextField-root': {\n            margin: theme.spacing(1),\n            minWidth: 230,\n        }\n    },\n    formControl: {\n        margin: theme.spacing(1),\n        minWidth: 230,\n    },\n    smMargin: {\n        margin: theme.spacing(1)\n    }\n})\n\nconst initialFieldValues = {\n    fullName: '',\n    mobile: '',\n    email: '',\n    age: '',\n    bloodGroup: '',\n    address: ''\n}\n\nconst DCandidateForm = ({ classes, ...props }) => {\n\n    //toast msg.\n    const { addToast } = useToasts()\n\n    //validate()\n    //validate({fullName:'jenny'})\n    const validate = (fieldValues = values) => {\n        let temp = { ...errors }\n        if ('fullName' in fieldValues)\n            temp.fullName = fieldValues.fullName ? \"\" : \"This field is required.\"\n        if ('mobile' in fieldValues)\n            temp.mobile = fieldValues.mobile ? \"\" : \"This field is required.\"\n        if ('bloodGroup' in fieldValues)\n            temp.bloodGroup = fieldValues.bloodGroup ? \"\" : \"This field is required.\"\n        if ('email' in fieldValues)\n            temp.email = (/^$|.+@.+..+/).test(fieldValues.email) ? \"\" : \"Email is not valid.\"\n        setErrors({\n            ...temp\n        })\n\n        if (fieldValues == values)\n            return Object.values(temp).every(x => x == \"\")\n    }\n\n    const {\n        values,\n        setValues,\n        errors,\n        setErrors,\n        handleInputChange,\n        resetForm\n    } = useForm(initialFieldValues, validate, props.setCurrentId)\n\n    //material-ui select\n    const inputLabel = React.useRef(null);\n    const [labelWidth, setLabelWidth] = React.useState(0);\n    React.useEffect(() => {\n        setLabelWidth(inputLabel.current.offsetWidth);\n    }, []);\n\n    const handleSubmit = e => {\n        e.preventDefault()\n        if (validate()) {\n            const onSuccess = () => {\n                resetForm()\n                addToast(\"Submitted successfully\", { appearance: 'success' })\n            }\n            if (props.currentId == 0)\n                props.createDCandidate(values, onSuccess)\n            else\n                props.updateDCandidate(props.currentId, values, onSuccess)\n        }\n    }\n\n    useEffect(() => {\n        if (props.currentId != 0) {\n            setValues({\n                ...props.dCandidateList.find(x => x.id == props.currentId)\n            })\n            setErrors({})\n        }\n    }, [props.currentId])\n\n    return (\n        <form autoComplete=\"off\" noValidate className={classes.root} onSubmit={handleSubmit}>\n            <Grid container>\n                <Grid item xs={6}>\n                    <TextField\n                        name=\"fullName\"\n                        variant=\"outlined\"\n                        label=\"Full Name\"\n                        value={values.fullName}\n                        onChange={handleInputChange}\n                        {...(errors.fullName && { error: true, helperText: errors.fullName })}\n                    />\n                    <TextField\n                        name=\"email\"\n                        variant=\"outlined\"\n                        label=\"Email\"\n                        value={values.email}\n                        onChange={handleInputChange}\n                        {...(errors.email && { error: true, helperText: errors.email })}\n                    />\n                    <FormControl variant=\"outlined\"\n                        className={classes.formControl}\n                        {...(errors.bloodGroup && { error: true })}\n                    >\n                        <InputLabel ref={inputLabel}>Blood Group</InputLabel>\n                        <Select\n                            name=\"bloodGroup\"\n                            value={values.bloodGroup}\n                            onChange={handleInputChange}\n                            labelWidth={labelWidth}\n                        >\n                            <MenuItem value=\"\">Select Blood Group</MenuItem>\n                            <MenuItem value=\"A+\">A +ve</MenuItem>\n                            <MenuItem value=\"A-\">A -ve</MenuItem>\n                            <MenuItem value=\"B+\">B +ve</MenuItem>\n                            <MenuItem value=\"B-\">B -ve</MenuItem>\n                            <MenuItem value=\"AB+\">AB +ve</MenuItem>\n                            <MenuItem value=\"AB-\">AB -ve</MenuItem>\n                            <MenuItem value=\"O+\">O +ve</MenuItem>\n                            <MenuItem value=\"O-\">O -ve</MenuItem>\n                        </Select>\n                        {errors.bloodGroup && <FormHelperText>{errors.bloodGroup}</FormHelperText>}\n                    </FormControl>\n                </Grid>\n                <Grid item xs={6}>\n\n                    <TextField\n                        name=\"mobile\"\n                        variant=\"outlined\"\n                        label=\"Mobile\"\n                        value={values.mobile}\n                        onChange={handleInputChange}\n                        {...(errors.mobile && { error: true, helperText: errors.mobile })}\n                    />\n                    <TextField\n                        name=\"age\"\n                        variant=\"outlined\"\n                        label=\"Age\"\n                        value={values.age}\n                        onChange={handleInputChange}\n                    />\n                    <TextField\n                        name=\"address\"\n                        variant=\"outlined\"\n                        label=\"Address\"\n                        value={values.address}\n                        onChange={handleInputChange}\n                    />\n                    <div>\n                        <Button\n                            variant=\"contained\"\n                            color=\"primary\"\n                            type=\"submit\"\n                            className={classes.smMargin}\n                        >\n                            Submit\n                        </Button>\n                        <Button\n                            variant=\"contained\"\n                            className={classes.smMargin}\n                            onClick={resetForm}\n                        >\n                            Reset\n                        </Button>\n                    </div>\n                </Grid>\n            </Grid>\n        </form>\n    );\n}\n\n\nconst mapStateToProps = state => ({\n    dCandidateList: state.dCandidate.list\n})\n\nconst mapActionToProps = {\n    createDCandidate: actions.create,\n    updateDCandidate: actions.update\n}\n\nexport default connect(mapStateToProps, mapActionToProps)(withStyles(styles)(DCandidateForm));"]},"metadata":{},"sourceType":"module"}