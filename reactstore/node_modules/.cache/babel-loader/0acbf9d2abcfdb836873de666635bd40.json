{"ast":null,"code":"var _jsxFileName = \"/Users/daniel/Documents/ReactStore/reactstore/src/Context.js\";\nimport React, { useState, useEffect, Component } from 'react';\nimport { storeProducts, detailProduct } from './data';\nexport const ProductContext = React.createContext();\nconst ProductConsumer = ProductContext.Consumer;\nexport { ProductProvider, ProductConsumer };\nexport default class ProductProvider extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      products: [],\n      detailProd: detailProduct,\n      cart: storeProducts,\n      modalOpen: false,\n      modalProduct: detailProduct,\n      cartSubTotal: 0,\n      cartTax: 0,\n      cartTotal: 0\n    };\n\n    this.handleDetail = () => {\n      console.log('hello from detail');\n      const product = this.getItem();\n      this.setState(() => {\n        return {\n          detailProduct: product\n        };\n      });\n    };\n\n    this.addToCart = id => {\n      let tempProducts = [...this.state.products];\n      const index = tempProducts.indexOf(this.getItem(id));\n      const product = tempProducts[index];\n      product.inCart = true;\n      product.count = 1;\n      const price = product.price;\n      product.total = price;\n      this.setState(() => {\n        return {\n          products: tempProducts,\n          cart: [...this.state.products, product]\n        };\n      }, () => {\n        this.addTotals();\n      });\n    };\n\n    this.getItem = id => {\n      const product = this.state.products.find(item => item.id == id);\n      return product;\n    };\n\n    this.setProducts = () => {\n      let tempProducts = [];\n      storeProducts.forEach(item => {\n        const singleItem = { ...item\n        };\n        tempProducts = [...tempProducts, singleItem];\n      });\n      this.setState(() => {\n        return {\n          detailProduct: this.state.products\n        };\n      });\n    };\n\n    this.closeModal = () => {\n      this.setState(() => {\n        return {\n          modalOpen: false\n        };\n      });\n    };\n\n    this.openModal = id => {\n      const product = this.getItem(id);\n      this.setState(() => {\n        return {\n          modalProduct: product,\n          modalOpen: true\n        };\n      });\n    };\n\n    this.increment = id => {\n      let tempCart = [...this.state.cart];\n      let selectProduct = tempCart.find(x => x.id === id);\n      const index = selectProduct.indexOf(selectProduct);\n      const product = tempCart[index];\n      product.count += 1;\n      product.total = product.count * product.price;\n      this.setState(() => {\n        return {\n          cart: [...tempCart]\n        };\n      }, () => this.addTotals());\n    };\n\n    this.decrement = id => {\n      let tempCart = [...this.state.cart];\n      let selectProduct = tempCart.find(x => x.id === id);\n      const index = selectProduct.indexOf(selectProduct);\n      const product = tempCart[index];\n      product.count -= 1;\n      if (product.count <= 0) this.removeItem(id);else {\n        product.total = product.count * product.price;\n      }\n      this.setState(() => {\n        return {\n          cart: [...tempCart]\n        };\n      }, () => this.addTotals());\n    };\n\n    this.removeItem = id => {\n      let tempProducts = [...this.state.products];\n      let tempCart = [...this.state.cart];\n      tempCart = tempCart.filter(x => {\n        return x.id !== id;\n      });\n      const index = tempProducts.indexOf(getItem(id));\n      let removedProduct = tempProducts[index];\n      removedProduct.inCart = false;\n      removedProduct.count = 0;\n      removedProduct.total = 0;\n      this.setState(() => {\n        return {\n          products: [...tempProducts],\n          cart: [...tempCart]\n        };\n      }, () => this.addTotals());\n    };\n\n    this.clearCart = () => {\n      this.setState(() => {\n        return {\n          cart: []\n        };\n      }, () => {\n        this.setProducts();\n        this.addTotals();\n      });\n    };\n\n    this.addTotals = () => {\n      let subTotal = 0;\n      this.state.cart.map(x => {\n        return subTotal += x.total;\n      });\n      const tempTax = subTotal * 0.1;\n      const tax = parseFloat(tempTax.toFixed(2));\n      const total = subTotal + tax; //setProd({ ...prod, cartSubTotal: subTotal, cartTax: tax, cartTotal: total })\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(ProductContext.Provider, {\n      value: { ...state,\n        handleDetail: this.handleDetail,\n        addToCart: this.addToCart,\n        openModal: this.openModal,\n        closeModal: this.closeModal,\n        increment: this.increment,\n        decrement: this.decrement,\n        removeItem: this.removeItem\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 9\n      }\n    }, props.children));\n  }\n\n}","map":{"version":3,"sources":["/Users/daniel/Documents/ReactStore/reactstore/src/Context.js"],"names":["React","useState","useEffect","Component","storeProducts","detailProduct","ProductContext","createContext","ProductConsumer","Consumer","ProductProvider","state","products","detailProd","cart","modalOpen","modalProduct","cartSubTotal","cartTax","cartTotal","handleDetail","console","log","product","getItem","setState","addToCart","id","tempProducts","index","indexOf","inCart","count","price","total","addTotals","find","item","setProducts","forEach","singleItem","closeModal","openModal","increment","tempCart","selectProduct","x","decrement","removeItem","filter","removedProduct","clearCart","subTotal","map","tempTax","tax","parseFloat","toFixed","render","props","children"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, Component } from 'react'\nimport { storeProducts, detailProduct } from './data'\nexport const ProductContext = React.createContext()\n\nconst ProductConsumer = ProductContext.Consumer\nexport { ProductProvider, ProductConsumer }\nexport default class ProductProvider extends Component {\n  state = {\n    products: [],\n    detailProd: detailProduct,\n    cart: storeProducts,\n    modalOpen: false,\n    modalProduct: detailProduct,\n    cartSubTotal: 0,\n    cartTax: 0,\n    cartTotal: 0\n  }\n\n  handleDetail = () => {\n    console.log('hello from detail')\n    const product = this.getItem()\n    this.setState(() => {\n      return { detailProduct: product }\n    })\n  }\n\n  addToCart = id => {\n    let tempProducts = [...this.state.products]\n    const index = tempProducts.indexOf(this.getItem(id))\n    const product = tempProducts[index]\n    product.inCart = true\n    product.count = 1\n    const price = product.price\n    product.total = price\n\n    this.setState(\n      () => {\n        return {\n          products: tempProducts,\n          cart: [...this.state.products, product]\n        }\n      },\n      () => {\n        this.addTotals()\n      }\n    )\n  }\n\n  getItem = id => {\n    const product = this.state.products.find(item => item.id == id)\n    return product\n  }\n  setProducts = () => {\n    let tempProducts = []\n    storeProducts.forEach(item => {\n      const singleItem = { ...item }\n      tempProducts = [...tempProducts, singleItem]\n    })\n    this.setState(() => {\n      return { detailProduct: this.state.products }\n    })\n  }\n  closeModal = () => {\n    this.setState(() => {\n      return { modalOpen: false }\n    })\n  }\n  openModal = id => {\n    const product = this.getItem(id)\n    this.setState(()=>{return{ modalProduct: product, modalOpen: true }})\n  }\n  increment = id => {\n    let tempCart = [...this.state.cart]\n    let selectProduct = tempCart.find(x => x.id === id)\n    const index = selectProduct.indexOf(selectProduct)\n    const product = tempCart[index]\n    product.count += 1\n    product.total = product.count * product.price\n    this.setState(\n      () => {\n        return { cart: [...tempCart] }\n      },\n      () => this.addTotals()\n    )\n    \n  }\n\n  decrement = id => {\n    let tempCart = [...this.state.cart]\n    let selectProduct = tempCart.find(x => x.id === id)\n    const index = selectProduct.indexOf(selectProduct)\n    const product = tempCart[index]\n    product.count -= 1\n    if (product.count <= 0) this.removeItem(id)\n    else {\n      product.total = product.count * product.price\n    }\n    this.setState(\n      () => {\n        return { cart: [...tempCart] }\n      },\n      () => this.addTotals()\n    )\n  }\n\n  removeItem = id => {\n    let tempProducts = [...this.state.products]\n    let tempCart = [...this.state.cart]\n    tempCart = tempCart.filter(x => {\n      return x.id !== id\n    })\n    const index = tempProducts.indexOf(getItem(id))\n    let removedProduct = tempProducts[index]\n    removedProduct.inCart = false\n    removedProduct.count = 0\n    removedProduct.total = 0\n    this.setState(\n      () => {\n        return { products: [...tempProducts], cart: [...tempCart] }\n      },\n      () => this.addTotals()\n    )\n  }\n  clearCart = () => {\n    this.setState(\n      () => {\n        return { cart: [] }\n      },\n      () => {\n        this.setProducts()\n        this.addTotals()\n      }\n    )\n  }\n  addTotals = () => {\n    let subTotal = 0\n    this.state.cart.map(x => {\n      return (subTotal += x.total)\n    })\n    const tempTax = subTotal * 0.1\n    const tax = parseFloat(tempTax.toFixed(2))\n    const total = subTotal + tax\n    //setProd({ ...prod, cartSubTotal: subTotal, cartTax: tax, cartTotal: total })\n  }\n  render () {\n    return (\n      <>\n        <ProductContext.Provider\n          value={{\n            ...state,\n            handleDetail: this.handleDetail,\n            addToCart: this.addToCart,\n            openModal: this.openModal,\n            closeModal: this.closeModal,\n            increment: this.increment,\n            decrement: this.decrement,\n            removeItem: this.removeItem\n          }}\n        >\n          {props.children}\n        </ProductContext.Provider>\n      </>\n    )\n  }\n}\n"]},"metadata":{},"sourceType":"module"}