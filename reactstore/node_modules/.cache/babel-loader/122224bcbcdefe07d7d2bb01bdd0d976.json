{"ast":null,"code":"var _jsxFileName = \"/Users/daniel/Documents/ReactStore/reactstore/src/Context.js\";\nimport React, { useState, useEffect } from 'react';\nimport { storeProducts, detailProduct } from '../files/data';\nconst ProductContext = React.createContext();\nconst productConsumer = use;\nconst ProductConsumer = ProductContext.Consumer;\nexport { ProductProvider, ProductConsumer };\n\nfunction ProductProvider(props) {\n  const [prod, setProd] = useState({\n    products: [],\n    detailProd: detailProduct,\n    cart: storeProducts,\n    modalOpen: false,\n    modalProduct: detailProduct,\n    cartSubTotal: 0,\n    cartTax: 0,\n    cartTotal: 0\n  });\n  useEffect(() => setProducts());\n\n  let handleDetail = () => {\n    console.log('hello from detail');\n    const product = getItem();\n    setProd({ ...prod,\n      detailProduct: product\n    });\n  };\n\n  let addToCart = id => {\n    let tempProducts = [...prod.products];\n    const index = tempProducts.indexOf(getItem(id));\n    const product = tempProducts[index];\n    product.inCart = true;\n    product.count = 1;\n    const price = product.price;\n    product.total = price;\n    setProd({ ...prod,\n      products: tempProducts,\n      cart: [...prod.cart, product]\n    });\n  };\n\n  let getItem = id => {\n    const product = prod.products.find(item => item.id == id);\n    return product;\n  };\n\n  let setProducts = () => {\n    let tempProducts = [];\n    storeProducts.forEach(item => {\n      const singleItem = { ...item\n      };\n      tempProducts = [...tempProducts, singleItem];\n    });\n    setProd({\n      products: tempProducts\n    });\n  };\n\n  let closeModal = () => {\n    setProd({ ...prod,\n      modalOpen: false\n    });\n  };\n\n  let openModal = id => {\n    const product = getItem(id);\n    setProd({ ...prod,\n      modalProduct: product,\n      modalOpen: true\n    });\n  };\n\n  let increment = id => {\n    let tempCart = [...prod.cart];\n    let selectProduct = tempCart.find(x => x.id === id);\n    const index = selectProduct.indexOf(selectProduct);\n    const product = tempCart[index];\n    product.count += 1;\n    product.total = product.count * product.price;\n    setProd({ ...prod,\n      cart: [...tempCart]\n    });\n    addTotals();\n  };\n\n  let decrement = id => {\n    let tempCart = [...prod.cart];\n    let selectProduct = tempCart.find(x => x.id === id);\n    const index = selectProduct.indexOf(selectProduct);\n    const product = tempCart[index];\n    product.count -= 1;\n    if (product.count <= 0) removeItem(id);else {\n      product.total = product.count * product.price;\n    }\n    setProd({ ...prod,\n      cart: [...tempCart]\n    });\n    addTotals();\n  };\n\n  let removeItem = id => {\n    let tempProducts = [...prod.products];\n    let tempCart = [...prod.cart];\n    tempCart = tempCart.filter(x => {\n      x.id !== id;\n    });\n    const index = tempProduct.indexOf(getItem(id));\n    let removedProduct = tempProducts[index];\n    removedProduct.inCart = false;\n    removedProduct.count = 0;\n    removedProduct.total = 0;\n    setProd({ ...prod,\n      cart: tempCart,\n      products: tempProducts\n    });\n  };\n\n  let clearCart = () => {\n    setProd({ ...prod,\n      cart: []\n    });\n    setProducts();\n    addTotals();\n  };\n\n  let addTotals = () => {\n    let subTotal = 0;\n    prod.cart.map(x => {\n      return subTotal += x.total;\n    });\n    const tempTax = subTotal * 0.1;\n    const tax = parseFloat(tempTax.toFixed(2));\n    const total = subTotal + tax;\n    setProd({ ...prod,\n      cartSubTotal: subTotal,\n      cartTax: tax,\n      cartTotal: total\n    });\n  };\n\n  setProd({ ...prod,\n    products: tempProducts\n  }); //const [detailProducts,setDetailProducts]=useState(detailProduct)\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(ProductContext.Provider, {\n    value: { ...prod,\n      handleDetail: handleDetail,\n      addToCart: addToCart,\n      openModal: openModal,\n      closeModal: closeModal,\n      increment: increment,\n      decrement: decrement,\n      removeItem: removeItem\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 7\n    }\n  }, props.children));\n}","map":{"version":3,"sources":["/Users/daniel/Documents/ReactStore/reactstore/src/Context.js"],"names":["React","useState","useEffect","storeProducts","detailProduct","ProductContext","createContext","productConsumer","use","ProductConsumer","Consumer","ProductProvider","props","prod","setProd","products","detailProd","cart","modalOpen","modalProduct","cartSubTotal","cartTax","cartTotal","setProducts","handleDetail","console","log","product","getItem","addToCart","id","tempProducts","index","indexOf","inCart","count","price","total","find","item","forEach","singleItem","closeModal","openModal","increment","tempCart","selectProduct","x","addTotals","decrement","removeItem","filter","tempProduct","removedProduct","clearCart","subTotal","map","tempTax","tax","parseFloat","toFixed","children"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { storeProducts, detailProduct } from '../files/data'\nconst ProductContext = React.createContext()\nconst productConsumer=use\nconst ProductConsumer = ProductContext.Consumer\nexport { ProductProvider, ProductConsumer }\n\nfunction ProductProvider (props) {\n  const [prod, setProd] = useState({\n    products: [],\n    detailProd: detailProduct,\n    cart: storeProducts,\n    modalOpen: false,\n    modalProduct: detailProduct,\n    cartSubTotal: 0,\n    cartTax: 0,\n    cartTotal: 0\n  })\n  useEffect(() => setProducts())\n\n  let handleDetail = () => {\n    console.log('hello from detail')\n    const product = getItem()\n    setProd({ ...prod, detailProduct: product })\n  }\n\n  let addToCart = id => {\n    let tempProducts = [...prod.products]\n    const index = tempProducts.indexOf(getItem(id))\n    const product = tempProducts[index]\n    product.inCart = true\n    product.count = 1\n    const price = product.price\n    product.total = price\n    setProd({ ...prod, products: tempProducts, cart: [...prod.cart, product] })\n  }\n\n  let getItem = id => {\n    const product = prod.products.find(item => item.id == id)\n    return product\n  }\n  let setProducts = () => {\n    let tempProducts = []\n    storeProducts.forEach(item => {\n      const singleItem = { ...item }\n      tempProducts = [...tempProducts, singleItem]\n    })\n    setProd({ products: tempProducts })\n  }\n  let closeModal = () => {\n    setProd({ ...prod, modalOpen: false })\n  }\n  let openModal = id => {\n    const product = getItem(id)\n    setProd({ ...prod, modalProduct: product, modalOpen: true })\n  }\n  let increment = id => {\n    let tempCart = [...prod.cart]\n    let selectProduct = tempCart.find(x => x.id === id)\n    const index = selectProduct.indexOf(selectProduct)\n    const product = tempCart[index]\n    product.count += 1\n    product.total = product.count * product.price\n    setProd({ ...prod, cart: [...tempCart] })\n    addTotals()\n  }\n\n  let decrement = id => {\n    let tempCart = [...prod.cart]\n    let selectProduct = tempCart.find(x => x.id === id)\n    const index = selectProduct.indexOf(selectProduct)\n    const product = tempCart[index]\n    product.count -= 1\n    if (product.count <= 0) removeItem(id)\n    else {\n      product.total = product.count * product.price\n    }\n    setProd({ ...prod, cart: [...tempCart] })\n    addTotals()\n  }\n\n  let removeItem = id => {\n    let tempProducts = [...prod.products]\n    let tempCart = [...prod.cart]\n    tempCart = tempCart.filter(x => {\n      x.id !== id\n    })\n    const index = tempProduct.indexOf(getItem(id))\n    let removedProduct = tempProducts[index]\n    removedProduct.inCart = false\n    removedProduct.count = 0\n    removedProduct.total = 0\n    setProd({ ...prod, cart: tempCart, products: tempProducts })\n  }\n  let clearCart = () => {\n    setProd({ ...prod, cart: [] })\n    setProducts()\n    addTotals()\n  }\n  let addTotals = () => {\n    let subTotal = 0\n    prod.cart.map(x => {\n      return (subTotal += x.total)\n    })\n    const tempTax = subTotal * 0.1\n    const tax = parseFloat(tempTax.toFixed(2))\n    const total = subTotal + tax\n    setProd({ ...prod, cartSubTotal: subTotal, cartTax: tax, cartTotal: total })\n  }\n\n  setProd({ ...prod, products: tempProducts })\n\n  //const [detailProducts,setDetailProducts]=useState(detailProduct)\n  return (\n    <>\n      <ProductContext.Provider\n        value={{\n          ...prod,\n          handleDetail: handleDetail,\n          addToCart: addToCart,\n          openModal: openModal,\n          closeModal: closeModal,\n          increment: increment,\n          decrement: decrement,\n          removeItem: removeItem\n        }}\n      >\n        {props.children}\n      </ProductContext.Provider>\n    </>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}