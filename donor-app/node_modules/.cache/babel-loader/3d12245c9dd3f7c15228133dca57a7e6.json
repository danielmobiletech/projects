{"ast":null,"code":"import _slicedToArray from\"/Users/daniel/donor-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import _objectSpread from\"/Users/daniel/donor-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _objectWithoutProperties from\"/Users/daniel/donor-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";import React,{useState,useEffect}from\"react\";import{Grid,TextField,withStyles,FormControl,InputLabel,Select,MenuItem,Button,FormHelperText}from\"@material-ui/core\";import useForm from\"./useForm\";import{connect}from\"react-redux\";import*as actions from\"../actions/dCandidate\";import{useToasts}from\"react-toast-notifications\";var styles=function styles(theme){return{root:{'& .MuiTextField-root':{margin:theme.spacing(1),minWidth:230}},formControl:{margin:theme.spacing(1),minWidth:230},smMargin:{margin:theme.spacing(1)}};};var initialFieldValues={fullName:'',mobile:'',email:'',age:'',bloodGroup:'',address:''};var DCandidateForm=function DCandidateForm(_ref){var classes=_ref.classes,props=_objectWithoutProperties(_ref,[\"classes\"]);//toast msg.\nvar _useToasts=useToasts(),addToast=_useToasts.addToast;//validate()\n//validate({fullName:'jenny'})\nvar validate=function validate(){var fieldValues=arguments.length>0&&arguments[0]!==undefined?arguments[0]:values;var temp=_objectSpread({},errors);if('fullName'in fieldValues)temp.fullName=fieldValues.fullName?\"\":\"This field is required.\";if('mobile'in fieldValues)temp.mobile=fieldValues.mobile?\"\":\"This field is required.\";if('bloodGroup'in fieldValues)temp.bloodGroup=fieldValues.bloodGroup?\"\":\"This field is required.\";if('email'in fieldValues)temp.email=/^$|.+@.+..+/.test(fieldValues.email)?\"\":\"Email is not valid.\";setErrors(_objectSpread({},temp));if(fieldValues==values)return Object.values(temp).every(function(x){return x==\"\";});};var _useForm=useForm(initialFieldValues,validate,props.setCurrentId),values=_useForm.values,setValues=_useForm.setValues,errors=_useForm.errors,setErrors=_useForm.setErrors,handleInputChange=_useForm.handleInputChange,resetForm=_useForm.resetForm;//material-ui select\nvar inputLabel=React.useRef(null);var _React$useState=React.useState(0),_React$useState2=_slicedToArray(_React$useState,2),labelWidth=_React$useState2[0],setLabelWidth=_React$useState2[1];React.useEffect(function(){setLabelWidth(inputLabel.current.offsetWidth);},[]);var handleSubmit=function handleSubmit(e){e.preventDefault();if(validate()){var onSuccess=function onSuccess(){resetForm();addToast(\"Submitted successfully\",{appearance:'success'});};if(props.currentId==0)props.createDCandidate(values,onSuccess);else props.updateDCandidate(props.currentId,values,onSuccess);}};useEffect(function(){if(props.currentId!=0){setValues(_objectSpread({},props.dCandidateList.find(function(x){return x.id==props.currentId;})));setErrors({});}},[props.currentId]);return/*#__PURE__*/React.createElement(\"form\",{autoComplete:\"off\",noValidate:true,className:classes.root,onSubmit:handleSubmit},/*#__PURE__*/React.createElement(Grid,{container:true},/*#__PURE__*/React.createElement(Grid,{item:true,xs:6},/*#__PURE__*/React.createElement(TextField,Object.assign({name:\"fullName\",variant:\"outlined\",label:\"Full Name\",value:values.fullName,onChange:handleInputChange},errors.fullName&&{error:true,helperText:errors.fullName})),/*#__PURE__*/React.createElement(TextField,Object.assign({name:\"email\",variant:\"outlined\",label:\"Email\",value:values.email,onChange:handleInputChange},errors.email&&{error:true,helperText:errors.email})),/*#__PURE__*/React.createElement(FormControl,Object.assign({variant:\"outlined\",className:classes.formControl},errors.bloodGroup&&{error:true}),/*#__PURE__*/React.createElement(InputLabel,{ref:inputLabel},\"Blood Group\"),/*#__PURE__*/React.createElement(Select,{name:\"bloodGroup\",value:values.bloodGroup,onChange:handleInputChange,labelWidth:labelWidth},/*#__PURE__*/React.createElement(MenuItem,{value:\"\"},\"Select Blood Group\"),/*#__PURE__*/React.createElement(MenuItem,{value:\"A+\"},\"A +ve\"),/*#__PURE__*/React.createElement(MenuItem,{value:\"A-\"},\"A -ve\"),/*#__PURE__*/React.createElement(MenuItem,{value:\"B+\"},\"B +ve\"),/*#__PURE__*/React.createElement(MenuItem,{value:\"B-\"},\"B -ve\"),/*#__PURE__*/React.createElement(MenuItem,{value:\"AB+\"},\"AB +ve\"),/*#__PURE__*/React.createElement(MenuItem,{value:\"AB-\"},\"AB -ve\"),/*#__PURE__*/React.createElement(MenuItem,{value:\"O+\"},\"O +ve\"),/*#__PURE__*/React.createElement(MenuItem,{value:\"O-\"},\"O -ve\")),errors.bloodGroup&&/*#__PURE__*/React.createElement(FormHelperText,null,errors.bloodGroup))),/*#__PURE__*/React.createElement(Grid,{item:true,xs:6},/*#__PURE__*/React.createElement(TextField,Object.assign({name:\"mobile\",variant:\"outlined\",label:\"Mobile\",value:values.mobile,onChange:handleInputChange},errors.mobile&&{error:true,helperText:errors.mobile})),/*#__PURE__*/React.createElement(TextField,{name:\"age\",variant:\"outlined\",label:\"Age\",value:values.age,onChange:handleInputChange}),/*#__PURE__*/React.createElement(TextField,{name:\"address\",variant:\"outlined\",label:\"Address\",value:values.address,onChange:handleInputChange}),/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(Button,{variant:\"contained\",color:\"primary\",type:\"submit\",className:classes.smMargin},\"Submit\"),/*#__PURE__*/React.createElement(Button,{variant:\"contained\",className:classes.smMargin,onClick:resetForm},\"Reset\")))));};var mapStateToProps=function mapStateToProps(state){return{dCandidateList:state.dCandidate.list};};var mapActionToProps={createDCandidate:actions.create,updateDCandidate:actions.update};export default connect(mapStateToProps,mapActionToProps)(withStyles(styles)(DCandidateForm));","map":{"version":3,"sources":["/Users/daniel/donor-app/src/components/DCandidateForm.js"],"names":["React","useState","useEffect","Grid","TextField","withStyles","FormControl","InputLabel","Select","MenuItem","Button","FormHelperText","useForm","connect","actions","useToasts","styles","theme","root","margin","spacing","minWidth","formControl","smMargin","initialFieldValues","fullName","mobile","email","age","bloodGroup","address","DCandidateForm","classes","props","addToast","validate","fieldValues","values","temp","errors","test","setErrors","Object","every","x","setCurrentId","setValues","handleInputChange","resetForm","inputLabel","useRef","labelWidth","setLabelWidth","current","offsetWidth","handleSubmit","e","preventDefault","onSuccess","appearance","currentId","createDCandidate","updateDCandidate","dCandidateList","find","id","error","helperText","mapStateToProps","state","dCandidate","list","mapActionToProps","create","update"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { Grid, TextField, withStyles, FormControl, InputLabel, Select, MenuItem, Button, FormHelperText } from \"@material-ui/core\";\nimport useForm from \"./useForm\";\nimport { connect } from \"react-redux\";\nimport * as actions from \"../actions/dCandidate\";\nimport { useToasts } from \"react-toast-notifications\";\n\nconst styles = theme => ({\n    root: {\n        '& .MuiTextField-root': {\n            margin: theme.spacing(1),\n            minWidth: 230,\n        }\n    },\n    formControl: {\n        margin: theme.spacing(1),\n        minWidth: 230,\n    },\n    smMargin: {\n        margin: theme.spacing(1)\n    }\n})\n\nconst initialFieldValues = {\n    fullName: '',\n    mobile: '',\n    email: '',\n    age: '',\n    bloodGroup: '',\n    address: ''\n}\n\nconst DCandidateForm = ({ classes, ...props }) => {\n\n    //toast msg.\n    const { addToast } = useToasts()\n\n    //validate()\n    //validate({fullName:'jenny'})\n    const validate = (fieldValues = values) => {\n        let temp = { ...errors }\n        if ('fullName' in fieldValues)\n            temp.fullName = fieldValues.fullName ? \"\" : \"This field is required.\"\n        if ('mobile' in fieldValues)\n            temp.mobile = fieldValues.mobile ? \"\" : \"This field is required.\"\n        if ('bloodGroup' in fieldValues)\n            temp.bloodGroup = fieldValues.bloodGroup ? \"\" : \"This field is required.\"\n        if ('email' in fieldValues)\n            temp.email = (/^$|.+@.+..+/).test(fieldValues.email) ? \"\" : \"Email is not valid.\"\n        setErrors({\n            ...temp\n        })\n\n        if (fieldValues == values)\n            return Object.values(temp).every(x => x == \"\")\n    }\n\n    const {\n        values,\n        setValues,\n        errors,\n        setErrors,\n        handleInputChange,\n        resetForm\n    } = useForm(initialFieldValues, validate, props.setCurrentId)\n\n    //material-ui select\n    const inputLabel = React.useRef(null);\n    const [labelWidth, setLabelWidth] = React.useState(0);\n    React.useEffect(() => {\n        setLabelWidth(inputLabel.current.offsetWidth);\n    }, []);\n\n    const handleSubmit = e => {\n        e.preventDefault()\n        if (validate()) {\n            const onSuccess = () => {\n                resetForm()\n                addToast(\"Submitted successfully\", { appearance: 'success' })\n            }\n            if (props.currentId == 0)\n                props.createDCandidate(values, onSuccess)\n            else\n                props.updateDCandidate(props.currentId, values, onSuccess)\n        }\n    }\n\n    useEffect(() => {\n        if (props.currentId != 0) {\n            setValues({\n                ...props.dCandidateList.find(x => x.id == props.currentId)\n            })\n            setErrors({})\n        }\n    }, [props.currentId])\n\n    return (\n        <form autoComplete=\"off\" noValidate className={classes.root} onSubmit={handleSubmit}>\n            <Grid container>\n                <Grid item xs={6}>\n                    <TextField\n                        name=\"fullName\"\n                        variant=\"outlined\"\n                        label=\"Full Name\"\n                        value={values.fullName}\n                        onChange={handleInputChange}\n                        {...(errors.fullName && { error: true, helperText: errors.fullName })}\n                    />\n                    <TextField\n                        name=\"email\"\n                        variant=\"outlined\"\n                        label=\"Email\"\n                        value={values.email}\n                        onChange={handleInputChange}\n                        {...(errors.email && { error: true, helperText: errors.email })}\n                    />\n                    <FormControl variant=\"outlined\"\n                        className={classes.formControl}\n                        {...(errors.bloodGroup && { error: true })}\n                    >\n                        <InputLabel ref={inputLabel}>Blood Group</InputLabel>\n                        <Select\n                            name=\"bloodGroup\"\n                            value={values.bloodGroup}\n                            onChange={handleInputChange}\n                            labelWidth={labelWidth}\n                        >\n                            <MenuItem value=\"\">Select Blood Group</MenuItem>\n                            <MenuItem value=\"A+\">A +ve</MenuItem>\n                            <MenuItem value=\"A-\">A -ve</MenuItem>\n                            <MenuItem value=\"B+\">B +ve</MenuItem>\n                            <MenuItem value=\"B-\">B -ve</MenuItem>\n                            <MenuItem value=\"AB+\">AB +ve</MenuItem>\n                            <MenuItem value=\"AB-\">AB -ve</MenuItem>\n                            <MenuItem value=\"O+\">O +ve</MenuItem>\n                            <MenuItem value=\"O-\">O -ve</MenuItem>\n                        </Select>\n                        {errors.bloodGroup && <FormHelperText>{errors.bloodGroup}</FormHelperText>}\n                    </FormControl>\n                </Grid>\n                <Grid item xs={6}>\n\n                    <TextField\n                        name=\"mobile\"\n                        variant=\"outlined\"\n                        label=\"Mobile\"\n                        value={values.mobile}\n                        onChange={handleInputChange}\n                        {...(errors.mobile && { error: true, helperText: errors.mobile })}\n                    />\n                    <TextField\n                        name=\"age\"\n                        variant=\"outlined\"\n                        label=\"Age\"\n                        value={values.age}\n                        onChange={handleInputChange}\n                    />\n                    <TextField\n                        name=\"address\"\n                        variant=\"outlined\"\n                        label=\"Address\"\n                        value={values.address}\n                        onChange={handleInputChange}\n                    />\n                    <div>\n                        <Button\n                            variant=\"contained\"\n                            color=\"primary\"\n                            type=\"submit\"\n                            className={classes.smMargin}\n                        >\n                            Submit\n                        </Button>\n                        <Button\n                            variant=\"contained\"\n                            className={classes.smMargin}\n                            onClick={resetForm}\n                        >\n                            Reset\n                        </Button>\n                    </div>\n                </Grid>\n            </Grid>\n        </form>\n    );\n}\n\n\nconst mapStateToProps = state => ({\n    dCandidateList: state.dCandidate.list\n})\n\nconst mapActionToProps = {\n    createDCandidate: actions.create,\n    updateDCandidate: actions.update\n}\n\nexport default connect(mapStateToProps, mapActionToProps)(withStyles(styles)(DCandidateForm));"]},"metadata":{},"sourceType":"module"}