{"ast":null,"code":"import { ACTION_TYPES } from \"../actions/dCandidate\";\nconst initialState = {\n  list: []\n};\nexport const dCandidate = (state = initialState, action) => {\n  switch (action.type) {\n    case ACTION_TYPES.FETCH_ALL:\n      return { ...state,\n        list: [...action.payload]\n      };\n\n    case ACTION_TYPES.CREATE:\n      return { ...state,\n        list: [...state.list, action.payload]\n      };\n\n    case ACTION_TYPES.UPDATE:\n      return { ...state,\n        list: state.list.map(x => x.id == action.payload.id ? action.payload : x)\n      };\n\n    case ACTION_TYPES.DELETE:\n      return { ...state,\n        list: state.list.filter(x => x.id != action.payload)\n      };\n\n    default:\n      return state;\n  }\n};","map":{"version":3,"sources":["/Users/daniel/donor-app/src/reducers/dCandidate.js"],"names":["ACTION_TYPES","initialState","list","dCandidate","state","action","type","FETCH_ALL","payload","CREATE","UPDATE","map","x","id","DELETE","filter"],"mappings":"AAAA,SAASA,YAAT,QAA6B,uBAA7B;AACA,MAAMC,YAAY,GAAG;AACjBC,EAAAA,IAAI,EAAE;AADW,CAArB;AAKA,OAAO,MAAMC,UAAU,GAAG,CAACC,KAAK,GAAGH,YAAT,EAAuBI,MAAvB,KAAkC;AAExD,UAAQA,MAAM,CAACC,IAAf;AACI,SAAKN,YAAY,CAACO,SAAlB;AACI,aAAO,EACH,GAAGH,KADA;AAEHF,QAAAA,IAAI,EAAE,CAAC,GAAGG,MAAM,CAACG,OAAX;AAFH,OAAP;;AAKJ,SAAKR,YAAY,CAACS,MAAlB;AACI,aAAO,EACH,GAAGL,KADA;AAEHF,QAAAA,IAAI,EAAE,CAAC,GAAGE,KAAK,CAACF,IAAV,EAAgBG,MAAM,CAACG,OAAvB;AAFH,OAAP;;AAKJ,SAAKR,YAAY,CAACU,MAAlB;AACI,aAAO,EACH,GAAGN,KADA;AAEHF,QAAAA,IAAI,EAAEE,KAAK,CAACF,IAAN,CAAWS,GAAX,CAAeC,CAAC,IAAIA,CAAC,CAACC,EAAF,IAAQR,MAAM,CAACG,OAAP,CAAeK,EAAvB,GAA4BR,MAAM,CAACG,OAAnC,GAA6CI,CAAjE;AAFH,OAAP;;AAKJ,SAAKZ,YAAY,CAACc,MAAlB;AACI,aAAO,EACH,GAAGV,KADA;AAEHF,QAAAA,IAAI,EAAEE,KAAK,CAACF,IAAN,CAAWa,MAAX,CAAkBH,CAAC,IAAIA,CAAC,CAACC,EAAF,IAAQR,MAAM,CAACG,OAAtC;AAFH,OAAP;;AAKJ;AACI,aAAOJ,KAAP;AA1BR;AA4BH,CA9BM","sourcesContent":["import { ACTION_TYPES } from \"../actions/dCandidate\";\nconst initialState = {\n    list: []\n}\n\n\nexport const dCandidate = (state = initialState, action) => {\n\n    switch (action.type) {\n        case ACTION_TYPES.FETCH_ALL:\n            return {\n                ...state,\n                list: [...action.payload]\n            }\n\n        case ACTION_TYPES.CREATE:\n            return {\n                ...state,\n                list: [...state.list, action.payload]\n            }\n\n        case ACTION_TYPES.UPDATE:\n            return {\n                ...state,\n                list: state.list.map(x => x.id == action.payload.id ? action.payload : x)\n            }\n\n        case ACTION_TYPES.DELETE:\n            return {\n                ...state,\n                list: state.list.filter(x => x.id != action.payload)\n            }\n            \n        default:\n            return state\n    }\n}"]},"metadata":{},"sourceType":"module"}