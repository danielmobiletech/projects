{"ast":null,"code":"var _jsxFileName = \"/Users/daniel/Documents/ReactStore/reactstore/src/Context.js\";\nimport React from 'react';\nimport { storeProducts, detailProduct } from '../files/data';\nconst ProductContext = React.createContext();\nconst ProductConsumer = ProductContext.Consumer;\nexport { ProductProvider, ProductConsumer };\n\nfunction ProductProvider() {\n  const [prod, setProd] = useState({\n    products: [],\n    detailProd: detailProduct,\n    cart: storeProducts,\n    modalOpen: false,\n    modalProduct: detailProduct,\n    cartSubTotal: 0,\n    cartTax: 0,\n    cartTotal: 0\n  });\n  useEffect;\n\n  let handleDetail = () => {\n    console.log('hello from detail');\n    const product = getItem();\n    setprod({ ...prod,\n      detailProduct: product\n    });\n  };\n\n  let addToCart = id => {\n    let tempProducts = [...prod.products];\n    const index = tempProducts.indexOf(getItem(id));\n    const product = tempProducts[index];\n    product.inCart = true;\n    product.count = 1;\n    const price = product.price;\n    product.total = price;\n    setProd({ ...prod,\n      products: tempProducts,\n      cart: [...prod.cart, product]\n    });\n  };\n\n  let getItem = id => {\n    const product = prod.products.find(item => item.id == id);\n    return product;\n  };\n\n  let setProducts = () => {\n    let tempProducts = [];\n    storeProducts.forEach(item => {\n      const singleItem = { ...item\n      };\n      tempProducts = [...tempProducts, singleItem];\n    });\n    setProd({\n      products: tempProducts\n    });\n  };\n\n  function componentDidMount() {\n    setProducts();\n  }\n\n  let closeModal = () => {\n    setProd({ ...prod,\n      modalOpen: false\n    });\n  };\n\n  let openModal = id => {\n    const product = getItem(id);\n    setProd({ ...prod,\n      modalProduct: product,\n      modalOpen: true\n    });\n  };\n\n  increment = id => {\n    let tempCart = [...prod.cart];\n    let selectProduct = tempCart.find(x => x.id === id);\n    const index = selectProduct.indexOf(selectProduct);\n    const product = tempCart[index];\n    product.count += 1;\n    product.total = product.count * product.price;\n    setProd({ ...prod,\n      cart: [...tempCart]\n    });\n    addTotals();\n  };\n\n  decrement = id => {\n    let tempCart = [...prod.cart];\n    let selectProduct = tempCart.find(x => x.id === id);\n    const index = selectProduct.indexOf(selectProduct);\n    const product = tempCart[index];\n    product.count -= 1;\n    if (product.count <= 0) removeItem(id);else {\n      product.total = product.count * product.price;\n    }\n    setProd({ ...prod,\n      cart: [...tempCart]\n    });\n    addTotals();\n  };\n\n  removeItem = id => {\n    let tempProducts = [...prod.products];\n    let tempCart = [...prod.cart];\n    tempCart = tempCart.filter(x => {\n      x.id !== id;\n    });\n    const index = tempProduct.indexOf(getItem(id));\n    let removedProduct = tempProducts[index];\n    removedProduct.inCart = false;\n    removedProduct.count = 0;\n    removedProduct.total = 0;\n    setProd({ ...prod,\n      cart: tempCart,\n      products: tempProducts\n    });\n  };\n\n  let clearCart = () => {\n    setProd({ ...prod,\n      cart: []\n    });\n    setProducts();\n    addTotals();\n  };\n\n  let addTotals = () => {\n    let subTotal = 0;\n    prod.cart.map(x => {\n      return subTotal += x.total;\n    });\n    const tempTax = subTotal * 0.1;\n    const tax = parseFloat(tempTax.toFixed(2));\n    const total = subTotal + tax;\n    setProd({ ...prod,\n      cartSubTotal: subTotal,\n      cartTax: tax,\n      cartTotal: total\n    });\n  };\n\n  setProd({ ...prod,\n    products: tempProducts\n  }); //const [detailProducts,setDetailProducts]=useState(detailProduct)\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(ProductContext.Provider, {\n    value: { ...prod,\n      handleDetail: this.handleDetail,\n      addToCart: this.addToCart,\n      openModal: this.openModal,\n      closeModal: this.closeModal,\n      increment: increment,\n      decrement: decrement,\n      removeItem: removeItem\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 7\n    }\n  }, props.children));\n}","map":{"version":3,"sources":["/Users/daniel/Documents/ReactStore/reactstore/src/Context.js"],"names":["React","storeProducts","detailProduct","ProductContext","createContext","ProductConsumer","Consumer","ProductProvider","prod","setProd","useState","products","detailProd","cart","modalOpen","modalProduct","cartSubTotal","cartTax","cartTotal","useEffect","handleDetail","console","log","product","getItem","setprod","addToCart","id","tempProducts","index","indexOf","inCart","count","price","total","find","item","setProducts","forEach","singleItem","componentDidMount","closeModal","openModal","increment","tempCart","selectProduct","x","addTotals","decrement","removeItem","filter","tempProduct","removedProduct","clearCart","subTotal","map","tempTax","tax","parseFloat","toFixed","props","children"],"mappings":"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","sourcesContent":["import React from 'react'\nimport { storeProducts, detailProduct } from '../files/data'\nconst ProductContext = React.createContext()\n\nconst ProductConsumer = ProductContext.Consumer\nexport { ProductProvider, ProductConsumer }\n\nfunction ProductProvider () {\n  const [prod, setProd] = useState({\n    products: [],\n    detailProd: detailProduct,\n    cart: storeProducts,\n    modalOpen: false,\n    modalProduct: detailProduct,\n    cartSubTotal: 0,\n    cartTax: 0,\n    cartTotal: 0\n  })\nuseEffect\n  let handleDetail = () => {\n    console.log('hello from detail')\n    const product = getItem()\n    setprod({ ...prod, detailProduct: product })\n  }\n\n  let addToCart = id => {\n    let tempProducts = [...prod.products]\n    const index = tempProducts.indexOf(getItem(id))\n    const product = tempProducts[index]\n    product.inCart = true\n    product.count = 1\n    const price = product.price\n    product.total = price\n    setProd({ ...prod, products: tempProducts, cart: [...prod.cart, product] })\n  }\n\n  let getItem = id => {\n    const product = prod.products.find(item => item.id == id)\n    return product\n  }\n  let setProducts = () => {\n    let tempProducts = []\n    storeProducts.forEach(item => {\n      const singleItem = { ...item }\n      tempProducts = [...tempProducts, singleItem]\n    })\n    setProd({ products: tempProducts })\n  }\n\n  function componentDidMount () {\n    setProducts()\n  }\n\n  let closeModal = () => {\n    setProd({ ...prod, modalOpen: false })\n  }\n  let openModal = id => {\n    const product = getItem(id)\n    setProd({ ...prod, modalProduct: product, modalOpen: true })\n  }\n  increment = id => {\n    let tempCart = [...prod.cart]\n    let selectProduct = tempCart.find(x => x.id === id)\n    const index = selectProduct.indexOf(selectProduct)\n    const product = tempCart[index]\n    product.count += 1\n    product.total = product.count * product.price\n    setProd({ ...prod, cart: [...tempCart] })\n    addTotals()\n  }\n\n  decrement = id => {\n    let tempCart = [...prod.cart]\n    let selectProduct = tempCart.find(x => x.id === id)\n    const index = selectProduct.indexOf(selectProduct)\n    const product = tempCart[index]\n    product.count -= 1;\n    if (product.count <= 0) removeItem(id)\n    else {\n    product.total = product.count * product.price\n    }\n    setProd({ ...prod, cart: [...tempCart] })\n    addTotals()\n  }\n\n  removeItem = id => {\n    let tempProducts = [...prod.products]\n    let tempCart = [...prod.cart]\n    tempCart = tempCart.filter(x => {\n      x.id !== id\n    })\n    const index = tempProduct.indexOf(getItem(id))\n    let removedProduct = tempProducts[index]\n    removedProduct.inCart = false\n    removedProduct.count = 0\n    removedProduct.total = 0\n    setProd({ ...prod, cart: tempCart, products: tempProducts })\n  }\n  let clearCart = () => {\n    setProd({ ...prod, cart: [] })\n    setProducts()\n    addTotals()\n  }\n  let addTotals = () => {\n    let subTotal = 0\n    prod.cart.map(x => {\n      return (subTotal += x.total)\n    })\n    const tempTax = subTotal * 0.1\n    const tax = parseFloat(tempTax.toFixed(2))\n    const total = subTotal + tax\n    setProd({ ...prod, cartSubTotal: subTotal, cartTax: tax, cartTotal: total })\n  }\n\n  setProd({ ...prod, products: tempProducts })\n\n  //const [detailProducts,setDetailProducts]=useState(detailProduct)\n  return (\n    <>\n      <ProductContext.Provider\n        value={{\n          ...prod,\n          handleDetail: this.handleDetail,\n          addToCart: this.addToCart,\n          openModal: this.openModal,\n          closeModal: this.closeModal,\n          increment: increment,\n          decrement: decrement,\n          removeItem: removeItem\n        }}\n      >\n        {props.children}\n      </ProductContext.Provider>\n    </>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}