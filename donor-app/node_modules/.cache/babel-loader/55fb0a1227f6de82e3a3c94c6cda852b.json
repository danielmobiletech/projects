{"ast":null,"code":"import React, { useState, useEffect } from \"react\";\n\nconst useForm = (initialFieldValues, validate, setCurrentId) => {\n  const [values, setValues] = useState(initialFieldValues);\n  const [errors, setErrors] = useState({});\n\n  const handleInputChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    const fieldValue = {\n      [name]: value\n    };\n    setValues({ ...values,\n      ...fieldValue\n    });\n    validate(fieldValue);\n  };\n\n  const resetForm = () => {\n    setValues({ ...initialFieldValues\n    });\n    setErrors({});\n    setCurrentId(0);\n  };\n\n  return {\n    values,\n    setValues,\n    errors,\n    setErrors,\n    handleInputChange,\n    resetForm\n  };\n};\n\nexport default useForm;","map":{"version":3,"sources":["/Users/daniel/donor-app/src/components/useForm.js"],"names":["React","useState","useEffect","useForm","initialFieldValues","validate","setCurrentId","values","setValues","errors","setErrors","handleInputChange","e","name","value","target","fieldValue","resetForm"],"mappings":"AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;;AAEA,MAAMC,OAAO,GAAG,CAACC,kBAAD,EAAqBC,QAArB,EAA+BC,YAA/B,KAAgD;AAC5D,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBP,QAAQ,CAACG,kBAAD,CAApC;AACA,QAAM,CAACK,MAAD,EAASC,SAAT,IAAsBT,QAAQ,CAAC,EAAD,CAApC;;AAEA,QAAMU,iBAAiB,GAAGC,CAAC,IAAI;AAC3B,UAAM;AAAEC,MAAAA,IAAF;AAAQC,MAAAA;AAAR,QAAkBF,CAAC,CAACG,MAA1B;AACA,UAAMC,UAAU,GAAG;AAAE,OAACH,IAAD,GAAQC;AAAV,KAAnB;AACAN,IAAAA,SAAS,CAAC,EACN,GAAGD,MADG;AAEN,SAAGS;AAFG,KAAD,CAAT;AAIAX,IAAAA,QAAQ,CAACW,UAAD,CAAR;AACH,GARD;;AAUA,QAAMC,SAAS,GAAG,MAAM;AACpBT,IAAAA,SAAS,CAAC,EACN,GAAGJ;AADG,KAAD,CAAT;AAGAM,IAAAA,SAAS,CAAC,EAAD,CAAT;AACAJ,IAAAA,YAAY,CAAC,CAAD,CAAZ;AACH,GAND;;AAQA,SAAO;AACHC,IAAAA,MADG;AAEHC,IAAAA,SAFG;AAGHC,IAAAA,MAHG;AAIHC,IAAAA,SAJG;AAKHC,IAAAA,iBALG;AAMHM,IAAAA;AANG,GAAP;AAQH,CA9BD;;AAgCA,eAAed,OAAf","sourcesContent":["import React, { useState, useEffect } from \"react\";\n\nconst useForm = (initialFieldValues, validate, setCurrentId) => {\n    const [values, setValues] = useState(initialFieldValues)\n    const [errors, setErrors] = useState({})\n\n    const handleInputChange = e => {\n        const { name, value } = e.target\n        const fieldValue = { [name]: value }\n        setValues({\n            ...values,\n            ...fieldValue\n        })\n        validate(fieldValue)\n    }\n\n    const resetForm = () => {\n        setValues({\n            ...initialFieldValues\n        })\n        setErrors({})\n        setCurrentId(0)\n    }\n\n    return {\n        values,\n        setValues,\n        errors,\n        setErrors,\n        handleInputChange,\n        resetForm\n    };\n}\n\nexport default useForm;"]},"metadata":{},"sourceType":"module"}