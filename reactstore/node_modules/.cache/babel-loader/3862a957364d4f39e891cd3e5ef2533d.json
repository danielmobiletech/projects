{"ast":null,"code":"var _jsxFileName = \"/Users/daniel/Documents/ReactStore/reactstore/src/Context.js\";\nimport React, { useState, useEffect, Component } from 'react';\nimport { storeProducts, detailProduct } from './data';\nexport const ProductContext = React.createContext();\nconst ProductConsumer = ProductContext.Consumer;\nexport { ProductProvider, ProductConsumer };\nexport default class ProductProvider extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      products: [],\n      detailProd: detailProduct,\n      cart: storeProducts,\n      modalOpen: false,\n      modalProduct: detailProduct,\n      cartSubTotal: 0,\n      cartTax: 0,\n      cartTotal: 0\n    };\n\n    this.handleDetail = () => {\n      console.log('hello from detail');\n      const product = getItem();\n      this.setState(() => {\n        return {\n          detailProduct: prod\n        };\n      });\n    };\n\n    this.addToCart = id => {\n      let tempProducts = [...prod.products];\n      const index = tempProducts.indexOf(getItem(id));\n      const product = tempProducts[index];\n      product.inCart = true;\n      product.count = 1;\n      const price = product.price;\n      product.total = price;\n      this.setState(() => {\n        return {\n          products: tempProducts,\n          cart: [...this.state.products, product]\n        };\n      }, () => {});\n    };\n\n    this.getItem = id => {\n      const product = prod.products.find(item => item.id == id);\n      return product;\n    };\n\n    this.setProducts = () => {\n      let tempProducts = [];\n      storeProducts.forEach(item => {\n        const singleItem = { ...item\n        };\n        tempProducts = [...tempProducts, singleItem];\n      });\n      setProd({\n        products: tempProducts\n      });\n    };\n\n    this.closeModal = () => {\n      setProd({ ...prod,\n        modalOpen: false\n      });\n    };\n\n    this.openModal = id => {\n      const product = getItem(id);\n      setProd({ ...prod,\n        modalProduct: product,\n        modalOpen: true\n      });\n    };\n\n    this.increment = id => {\n      let tempCart = [...prod.cart];\n      let selectProduct = tempCart.find(x => x.id === id);\n      const index = selectProduct.indexOf(selectProduct);\n      const product = tempCart[index];\n      product.count += 1;\n      product.total = product.count * product.price;\n      setProd({ ...prod,\n        cart: [...tempCart]\n      });\n      addTotals();\n    };\n\n    this.decrement = id => {\n      let tempCart = [...prod.cart];\n      let selectProduct = tempCart.find(x => x.id === id);\n      const index = selectProduct.indexOf(selectProduct);\n      const product = tempCart[index];\n      product.count -= 1;\n      if (product.count <= 0) removeItem(id);else {\n        product.total = product.count * product.price;\n      }\n      setProd({ ...prod,\n        cart: [...tempCart]\n      });\n      addTotals();\n    };\n\n    this.removeItem = id => {\n      let tempProducts = [...prod.products];\n      let tempCart = [...prod.cart];\n      tempCart = tempCart.filter(x => {\n        return x.id !== id;\n      });\n      const index = tempProducts.indexOf(getItem(id));\n      let removedProduct = tempProducts[index];\n      removedProduct.inCart = false;\n      removedProduct.count = 0;\n      removedProduct.total = 0;\n      setProd({ ...prod,\n        cart: tempCart,\n        products: tempProducts\n      });\n    };\n\n    this.clearCart = () => {\n      //setProd({ ...prod, cart: [] })\n      setProducts();\n      addTotals();\n    };\n\n    this.addTotals = () => {\n      let subTotal = 0;\n      prod.cart.map(x => {\n        return subTotal += x.total;\n      });\n      const tempTax = subTotal * 0.1;\n      const tax = parseFloat(tempTax.toFixed(2));\n      const total = subTotal + tax; //setProd({ ...prod, cartSubTotal: subTotal, cartTax: tax, cartTotal: total })\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(ProductContext.Provider, {\n      value: { ...state,\n        handleDetail: this.handleDetail,\n        addToCart: this.addToCart,\n        openModal: this.openModal,\n        closeModal: this.closeModal,\n        increment: this.increment,\n        decrement: this.decrement,\n        removeItem: this.removeItem\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 7\n      }\n    }, props.children));\n  }\n\n}","map":{"version":3,"sources":["/Users/daniel/Documents/ReactStore/reactstore/src/Context.js"],"names":["React","useState","useEffect","Component","storeProducts","detailProduct","ProductContext","createContext","ProductConsumer","Consumer","ProductProvider","state","products","detailProd","cart","modalOpen","modalProduct","cartSubTotal","cartTax","cartTotal","handleDetail","console","log","product","getItem","setState","prod","addToCart","id","tempProducts","index","indexOf","inCart","count","price","total","find","item","setProducts","forEach","singleItem","setProd","closeModal","openModal","increment","tempCart","selectProduct","x","addTotals","decrement","removeItem","filter","removedProduct","clearCart","subTotal","map","tempTax","tax","parseFloat","toFixed","render","props","children"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, Component } from 'react';\nimport { storeProducts, detailProduct } from './data'\nexport const ProductContext = React.createContext()\n\nconst ProductConsumer = ProductContext.Consumer\nexport { ProductProvider, ProductConsumer }\nexport default class ProductProvider extends Component\n{\n  \n\n  state={\n\n    products: [],\n    detailProd: detailProduct,\n    cart: storeProducts,\n    modalOpen: false,\n    modalProduct: detailProduct,\n    cartSubTotal: 0,\n    cartTax: 0,\n    cartTotal: 0\n  }\n  \n\n\n\n\n\n   handleDetail = () => {\n    console.log('hello from detail')\n    const product = getItem()\n    this.setState(()=>{return {detailProduct:prod}})\n  }\n\n   addToCart = id => {\n    let tempProducts = [...prod.products]\n    const index = tempProducts.indexOf(getItem(id))\n    const product = tempProducts[index]\n    product.inCart = true\n    product.count = 1\n    const price = product.price\n    product.total = price\n   \n    this.setState(\n\n      ()=>{\n        return { products:tempProducts,cart:[...this.state.products,product]\n\n\n      }\n    },\n    ()=>{}\n    )\n\n\n\n\n\n\n\n\n  }\n\n   getItem = (id) => {\n    const product = prod.products.find(item => item.id == id)\n    return product\n  }\n   setProducts = () => {\n    let tempProducts = []\n    storeProducts.forEach(item => {\n      const singleItem = { ...item }\n      tempProducts = [...tempProducts, singleItem]\n    })\n    setProd({ products: tempProducts })\n  }\n   closeModal = () => {\n    setProd({ ...prod, modalOpen: false })\n  }\n   openModal = id => {\n    const product = getItem(id)\n    setProd({ ...prod, modalProduct: product, modalOpen: true })\n  }\n   increment = id => {\n    let tempCart = [...prod.cart]\n    let selectProduct = tempCart.find(x => x.id === id)\n    const index = selectProduct.indexOf(selectProduct)\n    const product = tempCart[index]\n    product.count += 1\n    product.total = product.count * product.price\n    setProd({ ...prod, cart: [...tempCart] })\n    addTotals()\n  }\n\n   decrement = id => {\n    let tempCart = [...prod.cart]\n    let selectProduct = tempCart.find(x => x.id === id)\n    const index = selectProduct.indexOf(selectProduct)\n    const product = tempCart[index]\n    product.count -= 1\n    if (product.count <= 0) removeItem(id)\n    else {\n      product.total = product.count * product.price\n    }\n    setProd({ ...prod, cart: [...tempCart] })\n    addTotals()\n  }\n\n   removeItem = id => {\n    let tempProducts = [...prod.products]\n    let tempCart = [...prod.cart]\n    tempCart = tempCart.filter(x => {\n      return (x.id !== id)\n    })\n    const index = tempProducts.indexOf(getItem(id))\n    let removedProduct = tempProducts[index]\n    removedProduct.inCart = false\n    removedProduct.count = 0\n    removedProduct.total = 0\n    setProd({ ...prod, cart: tempCart, products: tempProducts })\n  }\n   clearCart = () => {\n    //setProd({ ...prod, cart: [] })\n    setProducts()\n    addTotals()\n  }\n   addTotals = () => {\n    let subTotal = 0\n    prod.cart.map(x => {\n      return (subTotal += x.total)\n    })\n    const tempTax = subTotal * 0.1\n    const tax = parseFloat(tempTax.toFixed(2))\n    const total = subTotal + tax\n    //setProd({ ...prod, cartSubTotal: subTotal, cartTax: tax, cartTotal: total })\n  }\n  render(){\n  return (\n    <>\n      <ProductContext.Provider\n        value={{\n          ...state,\n          handleDetail: this.handleDetail,\n          addToCart: this.addToCart,\n          openModal: this.openModal,\n          closeModal: this.closeModal,\n          increment: this.increment,\n          decrement: this.decrement,\n          removeItem: this.removeItem\n        }}\n      >\n        {props.children}\n      </ProductContext.Provider>\n    </>\n  )\n  \n}\n\n}"]},"metadata":{},"sourceType":"module"}